**************************
**			Done		**
**************************
2022-01-25 (Tue): vector
	- constructor (default) & destructor
	- capacity (size, max_size, capacity, empty)
	- iterator (confused....)

2022-01-27 (Thu): iterator
	- iterator_traits (still bit confused...)
	- inheritance: Iterator -> BidirectionalIterator -> RandomAccessIterator 		(TODO: arithmetic operator, inequality, +=/-=, [])

2022-01-31 (Mon): iterator + vector
	- iterator: RandomAccessIterator (finish)
	- vector: iterator member function
	- fix iterator+vector compilation error.

2022-02-01 (Tue): reverse_iterator + vector
	- reverse_iterator (finish)
	- vector: fill constructor, resize(), assign_fill(), operator[], at(), front(), back()

2022-02-02 (Wed): vector
	- resize(), reserve()
	- study: enable_if, assign(range member)

2022-02-03 (Thu): vector
	- (finally)figure out: enable_if, is_iterator, assign(range member incl. pointer)
	- constructor: range, copy, operator=
	- push_back, pop_back, insert_fill(with current capacity)

2022-02-07 (Mon): vector
	- insert_fill(with new capacity), insert_range, moveElements
	- erase_single, erase_range
	- swap (WIP)

2022-02-08 (Tue): vector tester
	- vector: swap, non-member overload operator, lexicographic_compare, get_allocator
	- tester: get_input

2022-02-09 (Wed): tester
	- TestCase.run(): function pointer array.
	- make standard + log file + run.sh

2022-02-15 (Tue): tester
	- tester format improve
	- vector-tester-constructor (debug copy constructor missing member initiazation with 0)

2022-02-16 (Wed): tester-vector
	- improve log file
	- improve vector-tester-constructor (build template)
	- vector test build up

2022-02-17 (Thu): tester-vector
	- reverse iterator test
	- rebuild ContainerTest and VectorTest case >> inherited class structure
	- finish vector test

2022-02-18 (Fri): map
	- pair && make_pair
	- prepare map

2022-02-21 (Mon): map - AVL
	- AVL learn and try

2022-02-22 (Tue): map
	- AVL implement to map 
		https://www.geeksforgeeks.org/avl-tree-set-1-insertion/
	- insert, capacity

2022-02-23 (Wed): AVL tree
	- implement tree.increment() for iterator++() -> unseccessful
	https://gcc.gnu.org/onlinedocs/gcc-4.6.3/libstdc++/api/a01067_source.html
	
2022-02-24 (Thu): AVL tree
https://www.cs.odu.edu/~zeil/cs361/latest/Public/treetraversal/index.html
	- fix AVL tree - iterator
		- in node, implement parent
		- in node, change rotate
		- in tree, change increment/decrement
		- in iterator, implement ++()
		https://gcc.gnu.org/onlinedocs/libstdc++/libstdc++-html-USERS-3.4/tree_8cc-source.html
		https://stackoverflow.com/questions/17150544/what-is-the-definition-of-rb-tree-increment-in-bits-stl-tree-h
		- in tree, implement Iterator
	- --end(): add senitel

2022-02-25 (Fri): AVL tree
	- improve AVL tree insert (sentinel management)

2022-03-03 (Thu): map
	- consolidate map test between std and ft.
	- correct minimumiNode() and maximumNode()
	- build test iterator/capacity
	- find()

2022-03-04 (Fri): map
	- get_allocator()
	- sort out compare in AVLTree
	- move balanceNode() into AVLTree
	- copy constructor & operator =
	- deleteNode(), erase
	- debug tree.end() const_cast => solved for printMap()

2022-03-05 (Sat): map
	- vector: InputIterator replace operator+/- to ++first
	- map: swap (+test)

2022-03-06 (Sun): map
	- operator[] (+test)
	- lower/upper bound

2022-03-07 (Mon) map
	- implement time check
	- equal_range
	- evaluate ft_container
	- finalize map test
	- add enable_if on map

2022-03-08 (Tue) stack
	- stack + test
	- add Timer.hpp

2022-03-09 (Wed) RBT
	- add extreme test
	- start RBT
		https://algorithmtutor.com/Data-Structures/Tree/Red-Black-Trees/
		https://www.geeksforgeeks.org/red-black-tree-set-3-delete-2/?ref=lbp

2022-03-10 (Thu) RBT
	- RBT insert Done
	- RBT delete Done

2022-03-11 (Fri) RBT
	- debug RBT deleteNode(): fix parent->left/right connection
	

**************************
**		Next To Do		**
**************************
	- test RBT extensively

******************************
**		General To Do		**
******************************
- map
	- insert-hint how to implement
	- lower/upper bound: is it better to directly iterator through or use tranverse tree (faster?)
- is_integral (how to implement with iterator_traits)
- catch
- TODO: to figure out a way to make the selection applicable for both ft.out & std.out
- ReverseIterator, operator overload (1 template parameter or 2?)
- vector <bool>
- exception implement in vector, map


******************************
**		Final check			**
******************************
- leaks
- check "friend" use if is valid
- function body in .hpp file
